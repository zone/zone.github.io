{"componentChunkName":"component---src-templates-article-js","path":"/backend/toy-robot","result":{"data":{"page":{"html":"<h1>Toy Robot Task</h1>\n<p>You have a toy robot on a table top, a grid of 5 x 5 units, there are no obstructions. You can issue commands to your robot allowing it to roam around the table top. But be careful, don't let it fall off!</p>\n<h2>Commands</h2>\n<p>The robot should be able to process the following commands.</p>\n<h3><code>PLACE X,Y,FACING</code></h3>\n<ul>\n<li>Puts the toy robot on the table in position X,Y and facing NORTH, SOUTH, EAST or WEST.</li>\n<li>The origin (0,0) can be considered to be the SOUTH WEST most corner.</li>\n<li>The first valid command to the robot is a PLACE command, after that, any sequence of commands may be issued, in any order, including another PLACE command.</li>\n<li>The application should discard all commands in the sequence until a valid PLACE command has been executed.</li>\n</ul>\n<h3><code>MOVE</code></h3>\n<p>Moves the toy robot one unit forward in the direction it is currently facing.</p>\n<h3><code>LEFT</code></h3>\n<p>Will rotate the robot 90° anticlockwise without changing the position of the robot.</p>\n<h3><code>RIGHT</code></h3>\n<p>Rotate the robot 90° clockwise without changing the position of the robot.</p>\n<h3><code>REPORT</code></h3>\n<p>Outputs the X,Y and F of the robot. This can be in any form, but standard output is sufficient.</p>\n<h2>Constraints</h2>\n<ul>\n<li>The robot is free to roam around the surface of the table, but must be prevented from falling to destruction. </li>\n<li>Any movement that would result in the robot falling from the table must be prevented, however further valid movement commands must still be allowed.</li>\n<li>Input can be from a file, or from standard input, as the developer chooses.</li>\n<li>You need to provide test data/results for the app &#x26; its logic.</li>\n</ul>\n<h2>Example Input &#x26; Output</h2>\n<ul>\n<li><code>place 0,0,NORTH</code></li>\n<li><code>move</code></li>\n<li><code>report</code> => <em>Output:0, 1, NORTH</em></li>\n<li><code>place 0, 0, NORTH</code></li>\n<li><code>left</code></li>\n<li><code>report</code> => <em>Output:0, 0, WEST</em></li>\n<li><code>place 1,2,EAST</code></li>\n<li><code>move</code></li>\n<li><code>move</code></li>\n<li><code>left</code></li>\n<li><code>move</code></li>\n<li><code>report</code> => <em>Output:3, 3, NORTH</em></li>\n</ul>\n<h2>Our Expectations</h2>\n<ul>\n<li>Be sure to write comments and a README. Provide instructions on how to run the project and any notes  about your solution.</li>\n<li>We're most interested to see problem solving and your approach.</li>\n<li>Keep it simple, keep it DRY, but don't over complicate or over engineer, comment and test as appropriate.</li>\n<li>Don't spend days on this, but do let us know what you think is missing and what you'd add given more time.</li>\n<li>Please do not copy solutions existing off the internet.</li>\n</ul>","frontmatter":{"description":"Don't let the robot fall off the table!","subTitle":"Backend","title":"Toy robot challenge"}}},"pageContext":{"description":"Don't let the robot fall off the table!","subTitle":"Backend","title":"Toy robot challenge","slug":"/backend/toy-robot","subPageRegex":"/^/backend/toy-robot//"}}}